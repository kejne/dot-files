set shell zsh
set shellopts '-eu'
set ifs "\n"
set icons true
# leave some space at the top and the bottom of the screen
set scrolloff 10
# Use the `dim` attribute instead of underline for the cursor in the preview pane
set cursorpreviewfmt "\033[7;2m"

%mkdir -p ~/.trash
%EDITOR=nvim
# show the result of execution of previous commands
map ` !true
map aa :push $nvim<space>
map A :push %mkdir<space>
map DD trash
map ax extract
# execute current file (must be executable)
map x $$f
map X !$f
# dedicated keys for file opener actions
map <enter> open
map H set hidden!
map o &mimeopen $f
map O $mimeopen --ask $f

map gD cd ~/Downloads 
map gs cd ~/second-brain 
map gc cd ~/.config
map gd cd ~/git 
map gn cd ~/.config/nvim 
map V $nvim $$f

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    read 1
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    read 1
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd trash %set -f; mv $fx ~/.trash
